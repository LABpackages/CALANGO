                        README for KOMODO2
             (last updated 01/28/2016 - mm/dd/yyyy format)

AUTHORS
-=-=-=-

Jorge Augusto Hongo (jorgeahongo@gmail.com)
Francisco Pereira Lobo (franciscolobo@gmail.com, francisco.lobo@embrapa.br)
Guilherme Pimentel Telles (gpt@ic.unicamp.br)


1 - DESCRIPTION
-=-=-=-=-=-=-=-

KOMODO2 identifies significantly enriched ontology terms when comparing two
groups of annotated genomes: Test and Background. The former is treated as a 
representative sample of the phenomenon you want to investigate
(e.g. pathogenesis), while the latter is considered as representative of its
absence.

Alternatively, KOMODO2 can search a pattern by correlating a variable that you
want to investigate (e.g. average life span) with all ontology terms in the
annotated genomes. The significantly enriched terms are correlated with all
terms by default.



2 - HOW TO USE - OVERVIEW
-=-=-=-=-=-=-=-=-=-=-=-=-

To run KOMODO2, you set the parameters according to the structure shown in the
parameters.R file and use the command "source( file )" on the following files:
load.R, clean.R and do.R, in this order.

The file "func.R" contains the functions used in the "do.R" file, plus some
development and support functions. Use its "InstallPackages()" function to
install KOMODO2's dependencies.

KOMODO2 uses an ontology file, specified in the parameters. Gene Ontology and
KEGG Orthology are natively supported and don't require this file.


2.1 - INSTALL
-=-=-=-=-=-=-

Make sure to have an updated version of R, enough so you can use the packages
from Bioconductor. Then, run the "InstallPackages()" function from "func.R"
to install KOMODO2's dependencies.
  

2.2 - PREPARING INPUT FILES 
-=-=-=-=-=-=-=-=-=-=-=-=-=-

For the enrichment analysis:
  - Tabular functional annotation of all genes, one species per file:
    -> in a single directory for the Test group.
    -> in another directory for the Background group.
  - Ontology file, in case you want an ontology not natively supported, or a
    customized ontology of your own.

For the correlation analysis, you'll also need:
  - Tabular file with the variable of your interest for each genome.


To describe a new ontology, pass as a parameter a file mapping each identifier
(e.g. GO:0009405) to its description (e.g. pathogenesis), separated by tabs.
An example with the SCOP ontology is as follows:

-------------------------------------------------------------------------------
#ScopID	Superfamily/Family
46456	All alpha proteins
46457	Globin-like
46458	Globin-like
46459	Truncated hemoglobin
46460	Protozoan/bacterial hemoglobin
46461	Ciliate (Paramecium caudatum) [TaxId: 5885]
-------------------------------------------------------------------------------

KOMODO2 can treat each identifier as its own description, saving the work from
preparing an ontology that isn't natively supported. For that, specify no
ontology file and set the ontology parameter as "other" ("ontology = other").


The tabular format of a functional annotation is exemplified below:

-------------------------------------------------------------------------------
Entry	Gene ontology IDs	Cross-reference (KO)
Q7L8J4	GO:0017124; GO:0005737; GO:0035556; GO:1904030; GO:0061099; GO:0004860	
Q8WW27	GO:0016814; GO:0006397; GO:0008270	K18773;
Q96P50	GO:0005096; GO:0046872	K12489;
-------------------------------------------------------------------------------

, and is specified as:
  - Fixed number of columns (minimum 2) separated by tabs, or "\t".
  - First line as the header, each column having a unique character string.
  - Each following line having a unique entry (first column) identifier.
  - Multiple terms of the same entry (row) and column separated by semicolon,
    or ";", with any number of spaces before and after it. It's use after the
    last term is optional.
  - A column can have no terms in any given row.


The tabular format for the correlation analysis is exemplified as:

-------------------------------------------------------------------------------
../projects/my_project/genome1	1.7
../projects/my_project/genome2	1.2
../projects/my_project/genome3	0.9
-------------------------------------------------------------------------------

, and is specified as:
  - Fixed number of columns (minimum 2) separated by tabs or "\t".
  - No header.
  - Each line having a unique identifier (first column) with the path of the
    genome it is referring to. Referred as the genome column.
  - One mandatory numeric value in every other column, referred as the variable
    columns.

You can use one of the columns as a normalization factor for the functional 
annotation (y variable), such as number of genes in each genome, with the
"denominator.column" parameter.



2.3 - SETTING UP KOMODO2 PARAMETERS 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

KOMODO2's parameters are listed at the header of the parameters.R file.
The file itself contains the default structure, ready to be filled, and
examples to teach how to use KOMODO2.

Exaple of the structure:

-------------------------------------------------------------------------------
KOMODO2 <- list(type = "significance",
                output.dir = "../results/my_analysis",
                test.path = "../projects/my_analysis/test_group",
                back.path = "../projects/my_analysis/background_group",
                ontology = "GO",
                dict.path = "",
                column = "Gene ontology IDs",
                bootstrap = 100,
                criticalValue = 0.05,
                cores = 4)
-------------------------------------------------------------------------------

Below are the parameters of the current version:

 General input
   type: (char) which analysis to run: "significance" or "correlation".
                Each type has specific parameters, see below for more info.
   output.dir: (char) path where to place the output files.
   ontology: (char) which ontology to use: "GO" (or "Gene Ontology"),
                    "KEGG" and "other".
   dict.path: (char) ontology's dictionary file (terms and their meaning) 
                     used if 'ontology = "other"'.
   column: (char/int) column name/number to use from the annotation files
                      (y variable for correlation analysis).
   cores: (integer) maximum number of processes to run simultaneously.


 Significance's specific parameters (type = "significance")
   test.path: (char) path of dir with annotation files of the test group.
   back.path: (char) path of dir with annotation files of the background one.
   bootstrap: (numeric) number of bootstrap samples to run. Set it to
                        any value below or equal to 1 to skip it.
   criticalValue: (numeric) cutoff for the significance criteria in the 
                            bootstrap counting. The terms must show a value 
                            below it to be significant.


 Correlation's specific parameters (type = "correlation")
   dataset.info: (char) path to the file with the paths of the dataset files
                        (genomes and their annotations, y variable)
                        and the genomes' attributes (x variable) columns.
   x.column: (integer) column to use as the x variable.
                       KOMODO2 assumes the first column has the paths to
                       the annotation files, don't use 'x.column = 1'.
   denominator.column: (integer) optional parameter, column to normalize
                                 the y variable.



2.4 - RUNNING KOMODO2
-=-=-=-=-=-=-=-=-=-=-

Set parameters according to the structure from "parameters.R" and use it to
create the KOMODO2's variable. Then, run:

> source("load.R")
> source("clean.R")
> source("do.R")

If done correctly, you'll have your results in the path specified in the
"output.dir" parameter (e.g. output.dir = "../results/my_experiment"). 

Note that R is case-sensitive and requires quote marks (' or ") to treat
your input as a character, rather than an existing variable.



3 - KOMODO2 OUTPUT 
-=-=-=-=-=-=-=-=-=-

KOMODO2 returns the following files in the directory specified in output.dir 
parameter:

  - fisher_over: overrepresented terms in the Fisher's Exact Test.
  - fisher_under: underrepresented terms in the Fisher's Exact Test.

  - ks_over: overrepresented terms the Kolmogorov-Smirnov Test.
  - ks_under: underrepresented terms the Kolmogorov-Smirnov Test.

  - wilcox_over: overrepresented terms the Wilcoxon-Mann-Whitney Test.
  - wilcox_under: underrepresented terms the Wilcoxon-Mann-Whitney Test.


Additionally, KOMODO2 creates the following subdirectories with additional
results:

---------------- + correlations + ----------------

Directory with the correlation of each significant term with all terms.
Done with the Pearson's r, Spearman's rank correlation coefficient and
Kendall's rank correlation coefficent, each test with its results in a
proper subdirectory.

------------------ + heatmaps + ------------------

Directory with a heatmap for each of the six results above: Fisher, KS and
Wilcoxon, both over and underrepresented. A heatmap may not appear if no
statistically significant result was found for that test and representation.

----------------- + histograms + -----------------

Directory with histograms, showing the distribution of each significant term
among both the Test and the Background genomes.



